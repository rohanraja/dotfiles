#!/usr/bin/env bash
#

url=$1

title=$(curl -s "$1" | pup "title text{}")
akmurl=$(curl -s "$1" | pup "input[value^=\"https://akm\"] attr{value}")
# Define the lock file with the parameter value
#
LOCKFILE="/tmp/my_script_lock_$title"

# Check if lock file exists
if [ -e "$LOCKFILE" ]; then
	# If lock file exists, exit
	echo "Another instance with parameter '$1' is already running."
	exit 1
fi

# If lock file doesn't exist, create it
touch "$LOCKFILE"

# Ensure lock file is removed on script exit
trap 'rm -f "$LOCKFILE"' EXIT

# Your script logic goes here
# For example:
echo "Running script with parameter: $1"
# Add your script logic here

seLen=$(curl --get --data-urlencode "search=$title" http://beast:4000/api/search | jq '.videos | length')
echo $seLen

# If seLen > 0 then exit
if [ $seLen -gt 0 ]; then
	echo "File already exists in the database"
	rm -f "$LOCKFILE"
	exit 0
fi

# if "title.mp4" already exists, then we don't need to download it again
if [ -f "$title.mp4" ]; then
	echo "File already exists"
	exit 0
fi

# If the akmurl is empty, then the video is not hosted on akm, so we can't download it

if [ -z "$akmurl" ]; then

	akmurl=$(curl -s "$1" | pup "input[value^=\"https://d.akm\"] attr{value}")

	hash=$(curl -s "$akmurl" | pup "input[name=\"hash\"] attr{value}")

	curl "$akmurl" \
		--output "$title.mp4" \
		-L \
		--data-raw "hash=$hash"
	rm -f "$LOCKFILE"
	exit 0
fi

dlUrl=$(curl -s "$akmurl" | pup "form[action^=\"https://\"]:first-of-type attr{action}")

if [ -z "$dlUrl" ]; then

	echo "DL Url Empty"
	hash=$(curl -s "$akmurl" | pup "input[name=\"hash\"] attr{value}")

	curl "$akmurl" \
		--output "$title.mp4" \
		-L \
		--data-raw "hash=$hash"
	rm -f "$LOCKFILE"
	exit 0
fi

wget -nc -O "$title.mp4" "$dlUrl"

# Remove lock file on script completion
rm -f "$LOCKFILE"
